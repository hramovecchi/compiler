nodes {
    00: ar.exa.edu.unicen.compiler.lexical.transition.states.NodeTerminal;
    01, 02, 03, 04, 05, 06, 07, 08, 09, 10, 11, 12, 13, 14, 15, 16: ar.exa.edu.unicen.compiler.lexical.transition.states.NodeNonTerminal;
}

edges {
    00, 00: @separator;
    00, 01: @alphabet;
    00, 02: @number;
    00, 03: -;
    00, 04: .;
    00, 08: +, /, (, ), {, }, [, ], @comma, @semicolon;
    00, 09: >, <, :;
    00, 10: =;
    00, 11: ^;
    00, 12: *;
    00, 14: ';

    01, 01: @alphanumeric, _, &, $;
    01, 00: @separator, (, ), {, }, [, ], @comma, @semicolon;

    02, 02: @number;
    02, 04: .;
    02, 06: B, b;
    02, 00: @separator, (, ), {, }, [, ], @comma, @semicolon;

    03, 02: @number;

    04, 05: @number;
    04, 06: B, b;
    04, 00: @separator, (, ), {, }, [, ], @comma, @semicolon;

    05, 05: @number;
    05, 06: B, b;
    05, 00: @separator, (, ), {, }, [, ], @comma, @semicolon;

    06, 07: +, -, @number;

    07, 07: @number;
    07, 00: @separator, (, ), {, }, [, ], @comma, @semicolon;

    08, 00: @separator;

    09, 10: =;
    09, 00: @separator;

    10, 00: @separator;

    11, 10: =;

    12, 13: *;
    12, 00: @separator;

    13, 13: @anything;
    13, 00: @newline;

    14, 14: @anything;
    14, 15: @newline;
    14, 16: ';

    15, 15: @separator;
    15, 14: +;

    16, 00: @anything;
}

initial {
    00;
}
